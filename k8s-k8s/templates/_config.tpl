{{- /* this file is generated by gradle task `preprocess`.
DON'T MODIFY IT!
 */ -}}
{{- define "configFileContent" -}}
control-plane {
  namespace = "gatling-k8s-k8s"
  # Control plane token
  token = "cpt_k8s_k8s_cf1g6auffiwse3mqqtwze6jpqbzsgmzgosx63biihn94iahes5o4up8bw64qfkpb7qemj3cpu5t3fybqgt1decdrca4dep5gcj1gcp3sceadqpbtcragcpjt8f1ggcufca3sc3b1co4uyqjicc3seqdnce3gepto8yasec3agptuccjtcw3dg3e"
  # Control plane token with an environment variable
  # Control plane description (optional)
  description = "K8s control plane for K8s injectors"
  # Locations configurations
  locations = [
    {
      # Private location ID, must be prefixed by prl_, only consist of numbers 0-9,
      # lowercase letters a-z, and underscores, with a max length of 30 characters
      id = "prl_k8s"
      # Private location description (optional)
      description = "Private Location on Kubernetes"
      # Private location type
      type = "kubernetes"
      # Namespace (optional, default based on kubernetes configuration)
      namespace = "gatling-injectors"
      # Engine (optional, default classic)
      engine = "classic" # Possible values: classic or javascript
      # Certified image configuration
      # They are hosted on Docker Hub, and available for the linux/amd64 and linux/arm64 platforms
      image {
        type = certified
        java = latest # See engine section
      }
      # Custom image configuration
      # You can build your own images from https://github.com/gatling/frontline-injector-docker-image
      # image {
      #   type = custom
      #   image = "gatlingcorp/classic-openjdk:latest"
      # }
      # Job definition (optional)
      # See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#job-v1-batch for properties
      job =       {
        "apiVersion": "batch/v1",
        "kind": "Job",
        "metadata": {
          "generateName": "gatling-job-",
          "namespace": "gatling-k8s-k8s"
        },
        "spec": {
          "template": {
            "metadata": {
              "annotations": {
                "example-key": "example-value"
              },
              "labels": {
                "example-key": "example-value"
              },
              "namespace": "gatling-k8s-k8s"
            },
            "spec": {
              "containers": [
                {
                  "env": [
                    {
                      "name": "env-key",
                      "value": "env-value"
                    }
                  ],
                  "name": "gatling-container",
                  "resources": {
                    "limits": {
                      "memory": "512Mi",
                      "cpu": "4"
                    },
                    "requests": {
                      "memory": "512Mi",
                      "cpu": "4"
                    }
                  }
                }
              ],
              "securityContext": {
                "sysctls": []
              }
            }
          },
          "ttlSecondsAfterFinished": 60
        }
      }

      # Java configuration (following configuration properties are optional)
      # System properties (optional)
      system-properties {
        # ExampleKey = ExampleValue
      }
      # Overwrite JAVA_HOME definition (optional)
      # java-home = "/usr/lib/jvm/zulu"
      # JVM Options (optional)
      # Default ones, that can be overridden with precedence:
      # [
      #   "-XX:MaxInlineLevel=20",
      #   "-XX:MaxTrivialSize=12",
      #   "-XX:+IgnoreUnrecognizedVMOptions",
      #   "--add-opens=java.base/java.nio=ALL-UNNAMED",
      #   "--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      # ]
      # Based on your instance configuration, you may want to update Xmx and Xms values.
      # jvm-options = ["-Xmx4G", "-Xms512M"]
    }
  ]
}
{{- end -}}
