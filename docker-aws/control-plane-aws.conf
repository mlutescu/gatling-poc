control-plane {
  # Control plane token test_aws
  token = "cpt_docker_aws_cf1g6auffiwse3mqqtwze6jpqbzsgmzft1b6i8pyhk3kfacqu9iktgzdiqrqfjf1h6dj8uhehg5asmtzcttucpjsgw3urctzcp1gn3bwciouoa33go5sc3tz8btsgpjig3tskcungfugcp5gg7osca5fg31gcaungj1sep5f8rhur3bugttsr"
  # Control plane token with an environment variable
//  token = ${?CONTROL_PLANE_TOKEN}
  # Control plane description (optional)
  description = "docker CP with AWS locations"
  # Locations configurations
  locations = [
    {
      # Private location ID, must be prefixed by prl_, only consist of numbers 0-9,
      # lowercase letters a-z, and underscores, with a max length of 30 characters
      id = "prl_docker_aws"
      # Private location description (optional)
      description = "Private Location on AWS"
      # Private location type
      type = "aws"
      # Configuration specific to AWS type configuration
      region = "eu-west-1"
      # Engine (optional, default classic)
      engine = "classic" # Possible values: classic or javascript
      # Certified AMI configuration
#mlu-      ami {
#mlu-        type = "certified"
#mlu-        # java = latest # See engine section
#mlu-      }
      # Custom AMI configuration (alternative to certified AMI)
      ami = {
        type = custom
        id = "ami-08a40967f9cff51ed"
      }
      # Security groups
      security-groups = ["sg-01c550e547f20e0f8"]
      # Instance type
      instance-type = "c5.9xlarge"
      # Spot instances (optional, default: false)
      # spot = true
      # Subnets
      subnets = [
      	      "subnet-620d2706",
	      "subnet-bbddf2cd",
	      "subnet-7254232a",
	      "subnet-610d2705",
	      "subnet-b8ddf2ce",
	      "subnet-7354232b",
	      ]
      # Elastic IP addresses (optional)
      # You will only be able to deploy a number of load generators up to the number of Elastic IP addresses you have configured.
      # elastic-ips = ["203.0.113.3", "203.0.113.4"]
      # Profile name (optional)
       # profile-name = "imsTeam"
      # IAM Instance profile (optional)
      # iam-instance-profile = ""
      # Custom tags (optional)
      tags {
       GatlingRole = "injector"
      }
      # Custom tags for each AWS resource type (optional)
      # Only resources types mentioned further are managed
      tags-for {
        instance {
          # ExampleKey = "ExampleValue"
        }
        volume {
          # ExampleKey = "ExampleValue"
        }
        network-interface {
          # ExampleKey = "ExampleValue"
        }
      }

      # Java configuration (following configuration properties are optional)
      # System properties (optional)
      system-properties {
        # ExampleKey = "ExampleValue"
      }
      # Overwrite JAVA_HOME definition (optional)
      # java-home = "/usr/lib/jvm/zulu"
      # JVM Options (optional)
      # Default ones, that can be overridden with precedence:
      # [
      #   "-XX:MaxInlineLevel=20",
      #   "-XX:MaxTrivialSize=12",
      #   "-XX:+IgnoreUnrecognizedVMOptions",
      #   "--add-opens=java.base/java.nio=ALL-UNNAMED",
      #   "--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED"
      # ]
      #  Based on your instance configuration, you may want to update Xmx and Xms values.
      # jvm-options = ["-Xmx4G", "-Xms512M"]
    }
  ]
}